{"version":3,"sources":["logo.svg","Request/error_handling.js","Request/uni_request.js","Component/APITest.js","App.js","reportWebVitals.js","index.js"],"names":["BadRequest","Error","ErrorForbidden","ErrorLogin","ErrorNotFound","ErrorNotAllowed","ErrorProxyGateway","ErrorServerFail","Redirect","rematchError","error","Promise","reject","catch","response","status","data","client","axios","create","baseURL","config","API_PROD","TestApi","React","Component","constructor","props","super","this","state","message","componentDidMount","get","then","res","setState","err","console","log","getDefaultErrorMessage","render","Typography","App","className","src","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"wUAAe,G,MAAA,IAA0B,kC,iCCAlC,MAAMA,UAAmBC,OACzB,MAAMC,UAAuBD,OAC7B,MAAME,UAAmBF,OACzB,MAAMG,UAAsBH,OAC5B,MAAMI,UAAwBJ,OAC9B,MAAMK,UAA0BL,OAChC,MAAMM,UAAwBN,OAC9B,MAAMO,UAAiBP,OAOvB,MAAMQ,EAAgBC,GACzBC,QAAQC,OAAOF,GACVG,OAAMH,GAASC,QAAQC,OAAOF,EAAMI,UAAsC,MAA1BJ,EAAMI,SAASC,OAAiB,IAAIP,EAASE,EAAMI,SAASE,MAAQN,KACpHG,OAAMH,GAASC,QAAQC,OAAOF,EAAMI,UAAsC,MAA1BJ,EAAMI,SAASC,OAAiB,IAAIf,EAAWU,EAAMI,SAASE,MAAQN,KACtHG,OAAMH,GAASC,QAAQC,OAAOF,EAAMI,UAAsC,MAA1BJ,EAAMI,SAASC,OAAiB,IAAIZ,EAAWO,EAAMI,SAASE,MAAQN,KACtHG,OAAMH,GAASC,QAAQC,OAAOF,EAAMI,UAAsC,MAA1BJ,EAAMI,SAASC,OAAiB,IAAIb,EAAeQ,EAAMI,SAASE,MAAQN,KAC1HG,OAAMH,GAASC,QAAQC,OAAOF,EAAMI,UAAsC,MAA1BJ,EAAMI,SAASC,OAAiB,IAAIX,EAAcM,EAAMI,SAASE,MAAQN,KACzHG,OAAMH,GAASC,QAAQC,OAAOF,EAAMI,UAAsC,MAA1BJ,EAAMI,SAASC,OAAiB,IAAIV,EAAgBK,EAAMI,SAASE,MAAQN,KAC3HG,OAAMH,GAASC,QAAQC,OAAOF,EAAMI,UAAsC,MAA1BJ,EAAMI,SAASC,OAAiB,IAAIR,EAAgBG,EAAMI,SAASE,MAAQN,KAC3HG,OAAMH,GAASC,QAAQC,OAAOF,EAAMI,UAAsC,MAA1BJ,EAAMI,SAASC,OAAiB,IAAIT,EAAkBI,EAAMI,SAASE,MAAQN,KCfhIO,EAASC,IAAMC,OAAO,CAGxBC,QAAyEC,EAAOC,W,mBCHrE,MAAMC,UAAgBC,IAAMC,UACvCC,YAAYC,GACRC,MAAMD,GACNE,KAAKC,MAAQ,CACTC,QAAS,IAIjBC,oBDGOf,EAAOgB,IAAI,SACbC,MAAKC,GACKA,IACRtB,MAAMJ,GCLQyB,MAAKC,IAClB,MAAMJ,EAAUI,EAAInB,KACpBa,KAAKO,SAAS,CAACL,eAChBlB,OAAOwB,IACNC,QAAQC,IFKmBF,KACnC,QAAQ,GACR,KAAMA,aAAerC,EACjB,MAAO,0BACX,KAAMqC,aAAenC,EACjB,MAAO,kDACX,KAAMmC,aAAejC,EACjB,MAAO,kCACX,QAEI,OADAkC,QAAQ5B,MAAM2B,GACP,4BEfSG,CAAuBH,OAI3CI,SACI,OACI,eAACC,EAAA,EAAD,6BACyBb,KAAKC,MAAMC,QAAQA,QAD5C,QCFGY,MAnBf,WACI,OACI,qBAAKC,UAAU,MAAf,SACI,yBAAQA,UAAU,aAAlB,UACI,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,cAAC,EAAD,IACA,mBACIH,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJR,+BCADC,MAZSC,IAChBA,GAAeA,aAAuBC,UACtC,6BAAqBnB,MAAK,EAAEoB,SAAQC,SAAQC,SAAQC,SAAQC,cACxDJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDpBO,IAASlB,OACL,cAAC,IAAMmB,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5BX,M","file":"static/js/main.30d8c160.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export class BadRequest extends Error {}\nexport class ErrorForbidden extends Error {}\nexport class ErrorLogin extends Error {}\nexport class ErrorNotFound extends Error {}\nexport class ErrorNotAllowed extends Error {}\nexport class ErrorProxyGateway extends Error {}\nexport class ErrorServerFail extends Error {}\nexport class Redirect extends Error {}\n\n// CREDITS TO HOMEPAGE-SIA WEBSITE\n// https://gitlab.com/sia-insa-lyon/dev/homepagesia/homepagesia-front\n// I BARELY KNOW WHAT THIS CODE DOES\n\n// Test Error matching\nexport const rematchError = (error) => (\n    Promise.reject(error)\n        .catch(error => Promise.reject(error.response && error.response.status === 300 ? new Redirect(error.response.data) : error))\n        .catch(error => Promise.reject(error.response && error.response.status === 400 ? new BadRequest(error.response.data) : error))\n        .catch(error => Promise.reject(error.response && error.response.status === 401 ? new ErrorLogin(error.response.data) : error))\n        .catch(error => Promise.reject(error.response && error.response.status === 403 ? new ErrorForbidden(error.response.data) : error))\n        .catch(error => Promise.reject(error.response && error.response.status === 404 ? new ErrorNotFound(error.response.data) : error))\n        .catch(error => Promise.reject(error.response && error.response.status === 405 ? new ErrorNotAllowed(error.response.data) : error))\n        .catch(error => Promise.reject(error.response && error.response.status === 500 ? new ErrorServerFail(error.response.data) : error))\n        .catch(error => Promise.reject(error.response && error.response.status === 502 ? new ErrorProxyGateway(error.response.data) : error))\n);\n\nexport const getDefaultErrorMessage = (err) => {\n    switch (true) {\n    case (err instanceof BadRequest):\n        return \"Une erreur est survenue\";\n    case (err instanceof ErrorForbidden):\n        return \"Vous n'avez pas l'accès à cette ressource\";\n    case (err instanceof ErrorNotFound):\n        return \"Cette ressource est introuvable\";\n    default:\n        console.error(err);\n        return \"Une erreur est survenue\";\n    }\n};\n","import axios from \"axios\";\nimport config from \"../config.json\";\nimport {rematchError} from \"./error_handling\";\n\n/**\n * Prepare the request with the address and headers\n * @type {AxiosInstance}\n */\nconst client = axios.create({\n    // use production URL for the built (production) version, otherwise, use localhost\n    // use prod anyways if config says so\n    baseURL: process.env.NODE_ENV===\"production\" || config.ALWAYS_USE_PROD ? config.API_PROD : config.API_DEV\n});\n\n/**\n * API Test function\n * @returns {Promise<AxiosResponse<any>>}\n */\nexport const getHealthCheck = () => {\n    return client.get(\"check\")\n        .then(res => {\n            return res;\n        }).catch(rematchError);\n};","import React from \"react\";\nimport {getHealthCheck} from \"../Request/uni_request\";\nimport {getDefaultErrorMessage} from \"../Request/error_handling\";\nimport {Typography} from \"@material-ui/core\";\n\n/**\n * A component used to test the connectivity with the API\n */\nexport default class TestApi extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: []\n        };\n    }\n\n    componentDidMount() {\n        getHealthCheck().then(res => {\n            const message = res.data;\n            this.setState({message});\n        }).catch( err => {\n            console.log(getDefaultErrorMessage(err));\n        });\n    }\n\n    render() {\n        return (\n            <Typography>\n                Server says : &quot;{this.state.message.message}&quot;\n            </Typography>\n        );\n    }\n\n}","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport TestApi from \"./Component/APITest\";\n\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n                <TestApi/>\n                <a\n                    className=\"App-link\"\n                    href=\"https://reactjs.org\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    Learn React\n                </a>\n            </header>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}